package neu.cs6510.shared.entity;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.sql.Timestamp;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Entity
@Table(name = "argo_logs")
public class ArgoLog {

  /**
   * Unique identifier for the log entry.
   * Auto-generated by the database.
   */
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private Long id;

  /**
   * The pipeline associated with this log entry.
   * Represents a foreign key to the Pipeline entity.
   */
  @ManyToOne
  @JoinColumn(name = "pipeline_id", referencedColumnName = "id", nullable = false)
  private Pipeline pipelineId;

  /**
   * The name of the Argo workflow corresponding to this log entry.
   * Used to group log entries for the same workflow execution.
   */
  @Column(name = "argo_workflow_name", nullable = false)
  private String argoWorkflowName;

  /**
   * The name of the stage within the Argo workflow.
   * Represents a specific phase or step in the workflow (e.g., "Build", "Test", "Deploy").
   */
  @Column(name = "stage_name", nullable = false)
  private String stageName;

  /**
   * The timestamp marking the start of this stage execution.
   * Can be null if the stage has not started yet.
   */
  @Column(name = "start_time")
  private Timestamp startTime;


  /**
   * The timestamp marking the end of this stage execution.
   * Can be null if the stage has not finished yet.
   */
  @Column(name = "end_time")
  private Timestamp endTime;

  /**
   * The status of the stage execution.
   */
  @Column(name = "status", nullable = false)
  private String status;
}
